#usda 1.0
(
    defaultPrim = "soccerBall"
    endTimeCode = 24
    startTimeCode = 1
    timeCodesPerSecond = 30
    upAxis = "Y"
)

def SkelRoot "soccerBall" (
    assetInfo = {
        asset identifier = @soccerBall.usda@
        string name = "soccerBall"
    }
    kind = "component"
)
{
    def Material "soccerBallMaterial"
    {
        token inputs:frame:stPrimvarName = "st"
        token outputs:displacement.connect = </soccerBall/soccerBallMaterial/pbrMat1.outputs:displacement>
        token outputs:surface.connect = </soccerBall/soccerBallMaterial/pbrMat1.outputs:surface>

        def Shader "pbrMat1"
        {
            uniform token info:id = "UsdPreviewSurface"
            float inputs:clearcoat = 0
            float inputs:clearcoatRoughness = 0
            color3f inputs:diffuseColor.connect = </soccerBall/soccerBallMaterial/color_map.outputs:rgb>
            float inputs:displacement = 0
            color3f inputs:emissiveColor = (0, 0, 0)
            float inputs:ior = 1.5
            float inputs:metallic = 0
            normal3f inputs:normal.connect = </soccerBall/soccerBallMaterial/normal_map.outputs:rgb>
            float inputs:occlusion = 1
            float inputs:opacity = 1
            float inputs:roughness.connect = </soccerBall/soccerBallMaterial/roughness_map.outputs:r>
            color3f inputs:specularColor = (1, 1, 1)
            int inputs:useSpecularWorkflow = 0
            token outputs:displacement
            token outputs:surface
        }

        def Shader "color_map"
        {
            uniform token info:id = "UsdUVTexture"
            float4 inputs:default = (0, 0, 0, 1)
            asset inputs:file = @textures/soccerBall_BC.png@
            float2 inputs:st.connect = </soccerBall/soccerBallMaterial/Primvar.outputs:result>
            token inputs:wrapS = "repeat"
            token inputs:wrapT = "repeat"
            float3 outputs:rgb
        }

        def Shader "Primvar"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            float2 inputs:default = (0, 0)
            token inputs:varname.connect = </soccerBall/soccerBallMaterial.inputs:frame:stPrimvarName>
            float2 outputs:result
        }

        def Shader "normal_map"
        {
            uniform token info:id = "UsdUVTexture"
            float4 inputs:default = (0, 0, 0, 1)
            asset inputs:file = @textures/soccerBall_N.png@
            float2 inputs:st.connect = </soccerBall/soccerBallMaterial/Primvar.outputs:result>
            token inputs:wrapS = "repeat"
            token inputs:wrapT = "repeat"
            float3 outputs:rgb
        }

        def Shader "roughness_map"
        {
            uniform token info:id = "UsdUVTexture"
            float4 inputs:default = (0, 0, 0, 1)
            asset inputs:file = @textures/soccerBall_R.png@
            float2 inputs:st.connect = </soccerBall/soccerBallMaterial/Primvar.outputs:result>
            token inputs:wrapS = "repeat"
            token inputs:wrapT = "repeat"
            float outputs:r
        }
    }

    def Mesh "geom" (
        prepend apiSchemas = ["BindingAPI"]
    )
    {
        float3[] extent = [(-1.0231737, -1.0231737, -1.0231737), (1.0231737, 1.0231737, 1.0231737)]
        int[] faceVertexCounts = [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
        int[] faceVertexIndices = [0, 74, 26, 81, 74, 14, 50, 26, 26, 50, 20, 53, 81, 26, 53, 17, 14, 75, 27, 50, 75, 1, 76, 27, 27, 76, 15, 51, 50, 27, 51, 20, 20, 51, 28, 52, 51, 15, 77, 28, 28, 77, 3, 78, 52, 28, 78, 16, 17, 53, 29, 80, 53, 20, 52, 29, 29, 52, 16, 79, 80, 29, 79, 2, 2, 79, 30, 87, 79, 16, 54, 30, 30, 54, 21, 57, 87, 30, 57, 8, 16, 78, 31, 54, 78, 3, 82, 31, 31, 82, 18, 55, 54, 31, 55, 21, 21, 55, 32, 56, 55, 18, 83, 32, 32, 83, 5, 84, 56, 32, 84, 19, 8, 57, 33, 86, 57, 21, 56, 33, 33, 56, 19, 85, 86, 33, 85, 4, 4, 85, 34, 93, 85, 19, 58, 34, 34, 58, 22, 61, 93, 34, 61, 11, 19, 84, 35, 58, 84, 5, 88, 35, 35, 88, 9, 59, 58, 35, 59, 22, 22, 59, 36, 60, 59, 9, 89, 36, 36, 89, 7, 90, 60, 36, 90, 10, 11, 61, 37, 92, 61, 22, 60, 37, 37, 60, 10, 91, 92, 37, 91, 6, 6, 91, 38, 97, 91, 10, 62, 38, 38, 62, 23, 65, 97, 38, 65, 13, 10, 90, 39, 62, 90, 7, 94, 39, 39, 94, 12, 63, 62, 39, 63, 23, 23, 63, 40, 64, 63, 12, 95, 40, 40, 95, 1, 75, 64, 40, 75, 14, 13, 65, 41, 96, 65, 23, 64, 41, 41, 64, 14, 74, 96, 41, 74, 0, 1, 95, 42, 76, 95, 12, 66, 42, 42, 66, 24, 69, 76, 42, 69, 15, 12, 94, 43, 66, 94, 7, 89, 43, 43, 89, 9, 67, 66, 43, 67, 24, 24, 67, 44, 68, 67, 9, 88, 44, 44, 88, 5, 83, 68, 44, 83, 18, 15, 69, 45, 77, 69, 24, 68, 45, 45, 68, 18, 82, 77, 45, 82, 3, 6, 97, 46, 92, 97, 13, 70, 46, 46, 70, 25, 73, 92, 46, 73, 11, 13, 96, 47, 70, 96, 0, 81, 47, 47, 81, 17, 71, 70, 47, 71, 25, 25, 71, 48, 72, 71, 17, 80, 48, 48, 80, 2, 87, 72, 48, 87, 8, 11, 73, 49, 93, 73, 25, 72, 49, 49, 72, 8, 86, 93, 49, 86, 4]
        rel material:binding = </soccerBall/soccerBallMaterial>
        point3f[] points = [(-0.5931442, -0.5931442, 0.5931442), (0.5931442, -0.5931442, 0.5931442), (-0.5931442, 0.5931442, 0.59314406), (0.5931442, 0.5931442, 0.59314406), (-0.5931442, 0.5931442, -0.5931442), (0.5931442, 0.59314406, -0.5931442), (-0.5931442, -0.5931442, -0.5931442), (0.5931442, -0.5931442, -0.5931442), (-0.74918145, 0.7491814, -2.874533e-8), (0.7491814, 1.735567e-8, -0.7491814), (2.7118237e-9, -0.7491814, -0.7491814), (-0.74918145, -2.874533e-8, -0.7491814), (0.7491814, -0.7491814, -1.735567e-8), (-0.74918145, -0.7491814, 2.874533e-8), (0, -0.7491814, 0.7491814), (0.7491814, -1.735567e-8, 0.7491814), (2.7118237e-9, 0.74918145, 0.7491814), (-0.7491814, 0, 0.7491814), (0.7491814, 0.7491814, 1.735567e-8), (2.7118237e-9, 0.7491814, -0.7491814), (1.952513e-8, -3.579607e-8, 1.0231737), (1.84404e-8, 1.0231737, -1.4101483e-8), (1.84404e-8, -1.4101483e-8, -1.0231737), (1.84404e-8, -1.0231737, 1.4101483e-8), (1.0231737, -3.579607e-8, 1.0847294e-9), (-1.0231737, -1.0847294e-9, -1.0847294e-9), (-0.38015145, -0.38015154, 0.88971627), (0.38015148, -0.38015148, 0.8897163), (0.38015142, 0.38015148, 0.88971627), (-0.38015148, 0.38015148, 0.88971627), (-0.38015148, 0.88971627, 0.38015142), (0.38015145, 0.88971627, 0.38015145), (0.38015142, 0.88971627, -0.38015148), (-0.38015154, 0.88971627, -0.38015145), (-0.38015148, 0.38015142, -0.88971627), (0.38015145, 0.38015145, -0.88971627), (0.38015145, -0.38015154, -0.88971627), (-0.38015154, -0.38015145, -0.88971627), (-0.38015148, -0.88971627, -0.38015142), (0.38015145, -0.88971627, -0.38015145), (0.38015142, -0.88971627, 0.38015148), (-0.38015154, -0.88971627, 0.38015145), (0.88971627, -0.38015148, 0.38015148), (0.88971627, -0.38015145, -0.38015145), (0.88971627, 0.38015154, -0.38015145), (0.8897163, 0.38015148, 0.38015142), (-0.88971627, -0.38015148, -0.38015148), (-0.88971627, -0.38015145, 0.38015145), (-0.88971627, 0.38015148, 0.38015142), (-0.88971627, 0.38015148, -0.38015142), (-1.735567e-8, -0.40846065, 0.95442283), (0.40846065, -1.735567e-8, 0.95442283), (3.471134e-8, 0.40846065, 0.9544229), (-0.40846065, 3.471134e-8, 0.9544228), (-1.735567e-8, 0.95442283, 0.40846065), (0.40846065, 0.95442283, 1.735567e-8), (3.471134e-8, 0.9544229, -0.40846065), (-0.40846065, 0.9544228, -3.471134e-8), (-1.735567e-8, 0.40846065, -0.95442283), (0.40846065, 1.735567e-8, -0.95442283), (3.471134e-8, -0.40846065, -0.9544229), (-0.40846065, -3.471134e-8, -0.9544228), (-1.735567e-8, -0.95442283, -0.40846065), (0.40846065, -0.95442283, -1.735567e-8), (3.471134e-8, -0.9544229, 0.40846065), (-0.40846065, -0.9544228, 3.471134e-8), (0.95442283, -0.40846065, 1.735567e-8), (0.95442283, -1.735567e-8, -0.40846065), (0.9544229, 0.40846065, -3.471134e-8), (0.9544228, 3.471134e-8, 0.40846065), (-0.95442283, -0.40846065, -1.735567e-8), (-0.95442283, -1.735567e-8, 0.40846065), (-0.9544229, 0.40846065, 3.471134e-8), (-0.9544228, 3.471134e-8, -0.40846065), (-0.35184228, -0.6976183, 0.6976183), (0.35184228, -0.6976183, 0.6976183), (0.6976184, -0.35184228, 0.6976183), (0.6976183, 0.35184225, 0.6976183), (0.35184228, 0.6976183, 0.6976183), (-0.35184228, 0.6976183, 0.6976183), (-0.6976183, 0.35184225, 0.6976183), (-0.6976184, -0.35184228, 0.6976183), (0.6976184, 0.6976183, 0.35184228), (0.6976183, 0.6976183, -0.35184225), (0.35184228, 0.6976183, -0.6976183), (-0.35184228, 0.6976183, -0.6976183), (-0.6976183, 0.6976183, -0.35184228), (-0.6976183, 0.6976183, 0.35184228), (0.6976183, 0.35184228, -0.6976183), (0.6976183, -0.35184228, -0.6976183), (0.35184228, -0.6976183, -0.6976183), (-0.35184228, -0.6976183, -0.6976183), (-0.6976183, -0.35184228, -0.6976183), (-0.6976183, 0.35184228, -0.6976183), (0.6976184, -0.6976183, -0.35184228), (0.6976183, -0.6976183, 0.35184225), (-0.6976183, -0.6976183, 0.35184228), (-0.6976183, -0.6976183, -0.35184228)]
        normal3f[] primvars:normals = [(-0.5773503, -0.5773504, 0.57735026), (-0.31321946, -0.6715258, 0.6715257), (-0.32932183, -0.32932177, 0.884926), (-0.6715258, -0.3132194, 0.6715256), (3.1320713e-8, -0.7071067, 0.7071067), (4.1378385e-8, -0.34515983, 0.938544), (1.1659508e-8, -3.109202e-8, 1), (-0.34515977, 2.8964863e-8, 0.9385439), (-0.7071067, 9.3962136e-8, 0.7071067), (0.31321952, -0.6715257, 0.6715257), (0.32932183, -0.32932183, 0.88492596), (0.57735026, -0.57735026, 0.57735014), (0.6715258, -0.3132195, 0.67152566), (0.7071067, 8.053898e-8, 0.70710677), (0.34515983, 4.5516224e-8, 0.938544), (0.32932183, 0.32932183, 0.88492596), (-4.9654062e-8, 0.3451598, 0.9385439), (0.6715257, 0.31321946, 0.6715258), (0.57735026, 0.57735014, 0.5773504), (0.31321955, 0.67152566, 0.6715258), (-1.3423164e-8, 0.70710677, 0.7071067), (-0.32932186, 0.32932183, 0.88492596), (-0.6715258, 0.3132195, 0.6715257), (-0.31321958, 0.67152566, 0.6715257), (-0.5773505, 0.57735026, 0.57735026), (-0.32932186, 0.884926, 0.3293219), (-0.6715257, 0.6715257, 0.31321958), (-4.551622e-8, 0.9385439, 0.34515992), (-3.8865025e-8, 1.0000001, 3.8865025e-8), (-0.34515977, 0.938544, 4.137838e-9), (-0.70710677, 0.70710677, 2.2371944e-8), (0.32932183, 0.884926, 0.32932186), (0.6715258, 0.67152566, 0.3132195), (0.70710677, 0.70710677, -8.053899e-8), (0.34515983, 0.9385439, 4.1378385e-9), (0.3293219, 0.88492596, -0.32932177), (1.6551354e-8, 0.9385439, -0.3451599), (0.6715256, 0.6715257, -0.3132195), (0.5773502, 0.57735026, -0.5773502), (0.31321955, 0.6715256, -0.6715257), (-2.6846328e-8, 0.7071067, -0.70710677), (-0.32932186, 0.884926, -0.3293219), (-0.6715257, 0.67152566, -0.3132196), (-0.3132195, 0.6715257, -0.6715258), (-0.57735026, 0.5773502, -0.57735026), (-0.32932177, 0.32932177, -0.884926), (-0.6715257, 0.3132195, -0.6715257), (-6.206758e-8, 0.34515983, -0.938544), (7.773005e-9, 4.275153e-8, -1), (-0.3451598, 4.1378385e-8, -0.938544), (-0.70710677, 5.8167053e-8, -0.70710677), (0.32932174, 0.32932177, -0.884926), (0.67152566, 0.3132195, -0.6715258), (0.70710677, -4.4743884e-9, -0.70710677), (0.34515983, 2.896487e-8, -0.938544), (0.32932177, -0.32932183, -0.88492596), (0, -0.34515983, -0.9385439), (0.6715257, -0.31321943, -0.6715257), (0.57735026, -0.5773504, -0.57735026), (0.31321943, -0.6715257, -0.6715257), (-2.2371939e-8, -0.7071069, -0.7071067), (-0.32932177, -0.32932183, -0.884926), (-0.6715258, -0.31321952, -0.6715256), (-0.31321946, -0.6715257, -0.6715257), (-0.5773503, -0.5773503, -0.57735026), (-0.3293218, -0.884926, -0.32932192), (-0.6715257, -0.6715257, -0.31321958), (-3.7240543e-8, -0.9385439, -0.34515992), (-3.8865025e-8, -1.0000001, -3.8865025e-8), (-0.34515977, -0.938544, -4.137838e-9), (-0.70710677, -0.70710677, -1.7897555e-8), (0.32932177, -0.884926, -0.32932183), (0.6715257, -0.6715257, -0.31321943), (0.70710677, -0.7071067, 7.1590215e-8), (0.34515983, -0.9385439, -4.1378385e-9), (0.32932186, -0.88492596, 0.32932177), (1.6551354e-8, -0.9385439, 0.3451599), (0.6715257, -0.6715257, 0.31321946), (-0.32932186, -0.884926, 0.3293219), (-0.67152566, -0.67152566, 0.31321952), (0.8849261, -0.32932186, 0.32932186), (0.9385439, -0.3451598, 7.0343255e-8), (1, -4.275153e-8, 1.9432512e-8), (0.9385439, 2.068919e-8, 0.34515986), (0.88492614, -0.3293218, -0.32932186), (0.9385439, 8.275676e-9, -0.34515986), (0.8849259, 0.32932183, -0.32932183), (0.9385439, 0.3451598, -4.9654062e-8), (0.88492596, 0.32932177, 0.32932183), (-0.88492614, -0.32932186, -0.32932186), (-0.9385439, -0.34515974, -4.1378385e-8), (-1, -5.052454e-8, -3.1092025e-8), (-0.938544, 6.206757e-8, -0.34515983), (-0.88492614, -0.3293218, 0.32932186), (-0.938544, 4.1378385e-9, 0.34515983), (-0.88492596, 0.32932183, 0.3293219), (-0.938544, 0.3451598, 1.2413517e-8), (-0.884926, 0.32932177, -0.32932183)] (
            interpolation = "vertex"
        )
        int[] primvars:normals:indices = [0, 11, 24, 18, 44, 38, 64, 58, 30, 53, 60, 50, 73, 70, 4, 13, 20, 8, 33, 40, 6, 28, 48, 68, 82, 91, 2, 10, 15, 21, 25, 31, 35, 41, 45, 51, 55, 61, 65, 71, 75, 78, 80, 84, 86, 88, 89, 93, 95, 97, 5, 14, 16, 7, 27, 34, 36, 29, 47, 54, 56, 49, 67, 74, 76, 69, 81, 85, 87, 83, 90, 94, 96, 92, 1, 9, 12, 17, 19, 23, 22, 3, 32, 37, 39, 43, 42, 26, 52, 57, 59, 63, 62, 46, 72, 77, 79, 66]
        matrix4d primvars:skel:geomBindTransform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) )
        int[] primvars:skel:jointIndices = [0, 2, 1, 0, 0, 2, 1, 0, 0, 1, 2, 0, 0, 1, 2, 0, 0, 1, 2, 0, 0, 1, 2, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 1, 2, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 1, 2, 0, 0, 2, 1, 0, 0, 1, 2, 0, 0, 1, 2, 0, 0, 2, 1, 0, 0, 1, 0, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 1, 2, 0, 0, 1, 2, 0, 0, 1, 2, 0, 0, 1, 2, 0, 0, 1, 2, 0, 0, 1, 2, 0, 0, 1, 2, 0, 0, 1, 2, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 1, 2, 0, 0, 1, 2, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 1, 2, 0, 0, 1, 2, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 1, 2, 0, 0, 2, 1, 0, 0, 1, 2, 0, 0, 1, 2, 0, 0, 1, 2, 0, 0, 1, 2, 0, 0, 1, 2, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 1, 2, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 1, 2, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 1, 2, 0, 0, 1, 2, 0, 0, 1, 2, 0, 0, 1, 2, 0, 0, 2, 1, 0, 0, 1, 2, 0, 0, 1, 2, 0, 0, 1, 2, 0, 0, 1, 2, 0, 0, 1, 2, 0, 0, 1, 2, 0, 0, 1, 2, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 1, 2, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0, 0, 2, 1, 0] (
            elementSize = 4
            interpolation = "vertex"
        )
        float[] primvars:skel:jointWeights = [0.5692931, 0.40507534, 0.025631592, 0, 0.5692931, 0.40507534, 0.025631592, 0, 0.5957184, 0.37356246, 0.030719193, 0, 0.5957184, 0.37356246, 0.030719193, 0, 0.5957183, 0.37356246, 0.030719202, 0, 0.5957184, 0.3735624, 0.030719211, 0, 0.5692931, 0.40507534, 0.025631592, 0, 0.5692931, 0.40507534, 0.025631592, 0, 0.55425256, 0.4311923, 0.014555102, 0, 0.63593626, 0.19379678, 0.17026693, 0, 0.52959627, 0.45823348, 0.012170239, 0, 0.63593626, 0.19379681, 0.17026691, 0, 0.52959627, 0.45823348, 0.012170239, 0, 0.52959627, 0.45823348, 0.012170243, 0, 0.52959627, 0.45823348, 0.012170239, 0, 0.63593626, 0.1937968, 0.17026691, 0, 0.55425256, 0.43119234, 0.014555097, 0, 0.63593626, 0.1937968, 0.17026691, 0, 0.55425256, 0.4311923, 0.0145550985, 0, 0.55425256, 0.4311923, 0.0145550985, 0, 0.65107197, 0.18616006, 0.16276798, 0, 0.5, 0.5, 0, 0, 0.65107197, 0.18616006, 0.16276799, 0, 0.49999967, 0.49999967, 6.37035e-7, 0, 0.65107197, 0.18616006, 0.16276798, 0, 0.65107197, 0.18616006, 0.16276799, 0, 0.6058242, 0.33128616, 0.06288964, 0, 0.6058242, 0.33128613, 0.062889665, 0, 0.6250753, 0.30073503, 0.07418966, 0, 0.6250753, 0.30073503, 0.07418966, 0, 0.52814674, 0.4686127, 0.003240536, 0, 0.52814674, 0.4686127, 0.003240536, 0, 0.52814674, 0.4686127, 0.003240536, 0, 0.52814674, 0.4686127, 0.0032405374, 0, 0.62507534, 0.300735, 0.07418968, 0, 0.62507534, 0.30073503, 0.07418967, 0, 0.6058242, 0.33128616, 0.06288964, 0, 0.60582423, 0.33128613, 0.062889665, 0, 0.5058158, 0.4914735, 0.0027107252, 0, 0.5058158, 0.4914735, 0.0027107252, 0, 0.5058158, 0.4914735, 0.0027107252, 0, 0.5058158, 0.4914735, 0.0027107263, 0, 0.60582423, 0.33128613, 0.06288966, 0, 0.60582423, 0.3312861, 0.06288966, 0, 0.6250753, 0.30073506, 0.074189655, 0, 0.6250753, 0.30073506, 0.07418967, 0, 0.60582423, 0.33128613, 0.06288966, 0, 0.60582423, 0.3312861, 0.06288966, 0, 0.6250753, 0.30073503, 0.07418966, 0, 0.6250753, 0.30073503, 0.07418966, 0, 0.60155225, 0.34149605, 0.056951683, 0, 0.6447343, 0.18936291, 0.16590276, 0, 0.62195224, 0.31070814, 0.06733963, 0, 0.6447344, 0.18936288, 0.16590276, 0, 0.51345885, 0.48555687, 0.0009843176, 0, 0.51345885, 0.48555687, 0.0009843176, 0, 0.5134588, 0.4855569, 0.0009843174, 0, 0.51345885, 0.48555684, 0.0009843177, 0, 0.62195224, 0.3107081, 0.06733962, 0, 0.6447343, 0.1893629, 0.16590276, 0, 0.60155225, 0.34149605, 0.05695169, 0, 0.6447344, 0.1893629, 0.16590275, 0, 0.49958184, 0.49958184, 0.00083631714, 0, 0.49958184, 0.49958184, 0.00083631714, 0, 0.49958184, 0.49958184, 0.000836317, 0, 0.49958184, 0.49958184, 0.00083631725, 0, 0.60155225, 0.34149605, 0.056951683, 0, 0.6447343, 0.18936291, 0.16590276, 0, 0.62195224, 0.31070814, 0.06733963, 0, 0.6447344, 0.18936288, 0.16590276, 0, 0.60155225, 0.34149605, 0.056951683, 0, 0.6447343, 0.18936291, 0.16590276, 0, 0.62195224, 0.31070814, 0.06733963, 0, 0.6447344, 0.18936288, 0.16590276, 0, 0.5423802, 0.44177446, 0.01584533, 0, 0.5423802, 0.44177446, 0.01584533, 0, 0.60755897, 0.32226795, 0.07017307, 0, 0.62534076, 0.29215333, 0.08250593, 0, 0.5683655, 0.41264418, 0.018990315, 0, 0.5683655, 0.41264418, 0.018990315, 0, 0.62534076, 0.29215333, 0.08250593, 0, 0.60755897, 0.32226795, 0.07017307, 0, 0.56836545, 0.4126442, 0.018990323, 0, 0.5683655, 0.41264418, 0.018990314, 0, 0.5683655, 0.41264418, 0.018990315, 0, 0.5683655, 0.41264418, 0.018990315, 0, 0.5683655, 0.41264418, 0.018990315, 0, 0.5683655, 0.41264418, 0.018990315, 0, 0.62534076, 0.29215333, 0.08250593, 0, 0.607559, 0.32226795, 0.070173055, 0, 0.5423802, 0.44177446, 0.01584533, 0, 0.5423802, 0.44177446, 0.01584533, 0, 0.607559, 0.32226795, 0.070173055, 0, 0.62534076, 0.29215333, 0.08250593, 0, 0.5423802, 0.4417745, 0.015845338, 0, 0.5423802, 0.44177446, 0.01584533, 0, 0.5423802, 0.44177446, 0.01584533, 0, 0.5423802, 0.44177446, 0.01584533, 0] (
            elementSize = 4
            interpolation = "vertex"
        )
        texCoord2f[] primvars:st = [(0.375, 0), (0.4375, 0), (0.4375, 0.0625), (0.375, 0.0625), (0.5, 0), (0.5, 0.0625), (0.5, 0.125), (0.4375, 0.125), (0.375, 0.125), (0.5625, 0), (0.5625, 0.0625), (0.625, 0), (0.625, 0.0625), (0.625, 0.125), (0.5625, 0.125), (0.5625, 0.1875), (0.5, 0.1875), (0.625, 0.1875), (0.625, 0.25), (0.5625, 0.25), (0.5, 0.25), (0.4375, 0.1875), (0.375, 0.1875), (0.4375, 0.25), (0.375, 0.25), (0.4375, 0.3125), (0.375, 0.3125), (0.5, 0.3125), (0.5, 0.375), (0.4375, 0.375), (0.375, 0.375), (0.5625, 0.3125), (0.625, 0.3125), (0.625, 0.375), (0.5625, 0.375), (0.5625, 0.4375), (0.5, 0.4375), (0.625, 0.4375), (0.625, 0.5), (0.5625, 0.5), (0.5, 0.5), (0.4375, 0.4375), (0.375, 0.4375), (0.4375, 0.5), (0.375, 0.5), (0.4375, 0.5625), (0.375, 0.5625), (0.5, 0.5625), (0.5, 0.625), (0.4375, 0.625), (0.375, 0.625), (0.5625, 0.5625), (0.625, 0.5625), (0.625, 0.625), (0.5625, 0.625), (0.5625, 0.6875), (0.5, 0.6875), (0.625, 0.6875), (0.625, 0.75), (0.5625, 0.75), (0.5, 0.75), (0.4375, 0.6875), (0.375, 0.6875), (0.4375, 0.75), (0.375, 0.75), (0.4375, 0.8125), (0.375, 0.8125), (0.5, 0.8125), (0.5, 0.875), (0.4375, 0.875), (0.375, 0.875), (0.5625, 0.8125), (0.625, 0.8125), (0.625, 0.875), (0.5625, 0.875), (0.5625, 0.9375), (0.5, 0.9375), (0.625, 0.9375), (0.625, 1), (0.5625, 1), (0.5, 1), (0.4375, 0.9375), (0.375, 0.9375), (0.4375, 1), (0.375, 1), (0.6875, 0), (0.6875, 0.0625), (0.75, 0), (0.75, 0.0625), (0.75, 0.125), (0.6875, 0.125), (0.8125, 0), (0.8125, 0.0625), (0.875, 0), (0.875, 0.0625), (0.875, 0.125), (0.8125, 0.125), (0.8125, 0.1875), (0.75, 0.1875), (0.875, 0.1875), (0.875, 0.25), (0.8125, 0.25), (0.75, 0.25), (0.6875, 0.1875), (0.6875, 0.25), (0.125, 0), (0.1875, 0), (0.1875, 0.0625), (0.125, 0.0625), (0.25, 0), (0.25, 0.0625), (0.25, 0.125), (0.1875, 0.125), (0.125, 0.125), (0.3125, 0), (0.3125, 0.0625), (0.3125, 0.125), (0.3125, 0.1875), (0.25, 0.1875), (0.3125, 0.25), (0.25, 0.25), (0.1875, 0.1875), (0.125, 0.1875), (0.1875, 0.25), (0.125, 0.25)] (
            interpolation = "faceVarying"
        )
        int[] primvars:st:indices = [0, 1, 2, 3, 1, 4, 5, 2, 2, 5, 6, 7, 3, 2, 7, 8, 4, 9, 10, 5, 9, 11, 12, 10, 10, 12, 13, 14, 5, 10, 14, 6, 6, 14, 15, 16, 14, 13, 17, 15, 15, 17, 18, 19, 16, 15, 19, 20, 8, 7, 21, 22, 7, 6, 16, 21, 21, 16, 20, 23, 22, 21, 23, 24, 24, 23, 25, 26, 23, 20, 27, 25, 25, 27, 28, 29, 26, 25, 29, 30, 20, 19, 31, 27, 19, 18, 32, 31, 31, 32, 33, 34, 27, 31, 34, 28, 28, 34, 35, 36, 34, 33, 37, 35, 35, 37, 38, 39, 36, 35, 39, 40, 30, 29, 41, 42, 29, 28, 36, 41, 41, 36, 40, 43, 42, 41, 43, 44, 44, 43, 45, 46, 43, 40, 47, 45, 45, 47, 48, 49, 46, 45, 49, 50, 40, 39, 51, 47, 39, 38, 52, 51, 51, 52, 53, 54, 47, 51, 54, 48, 48, 54, 55, 56, 54, 53, 57, 55, 55, 57, 58, 59, 56, 55, 59, 60, 50, 49, 61, 62, 49, 48, 56, 61, 61, 56, 60, 63, 62, 61, 63, 64, 64, 63, 65, 66, 63, 60, 67, 65, 65, 67, 68, 69, 66, 65, 69, 70, 60, 59, 71, 67, 59, 58, 72, 71, 71, 72, 73, 74, 67, 71, 74, 68, 68, 74, 75, 76, 74, 73, 77, 75, 75, 77, 78, 79, 76, 75, 79, 80, 70, 69, 81, 82, 69, 68, 76, 81, 81, 76, 80, 83, 82, 81, 83, 84, 11, 85, 86, 12, 85, 87, 88, 86, 86, 88, 89, 90, 12, 86, 90, 13, 87, 91, 92, 88, 91, 93, 94, 92, 92, 94, 95, 96, 88, 92, 96, 89, 89, 96, 97, 98, 96, 95, 99, 97, 97, 99, 100, 101, 98, 97, 101, 102, 13, 90, 103, 17, 90, 89, 98, 103, 103, 98, 102, 104, 17, 103, 104, 18, 105, 106, 107, 108, 106, 109, 110, 107, 107, 110, 111, 112, 108, 107, 112, 113, 109, 114, 115, 110, 114, 0, 3, 115, 115, 3, 8, 116, 110, 115, 116, 111, 111, 116, 117, 118, 116, 8, 22, 117, 117, 22, 24, 119, 118, 117, 119, 120, 113, 112, 121, 122, 112, 111, 118, 121, 121, 118, 120, 123, 122, 121, 123, 124]
        prepend rel skel:animationSource = </soccerBall/animation>
        prepend rel skel:skeleton = </soccerBall/skeleton>
        uniform token subdivisionScheme = "none"
    }

    def Skeleton "skeleton"
    {
        uniform matrix4d[] bindTransforms = [( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ), ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 1.0231736898422241, 0, 1) ), ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, -0.9544228911399841, 0, 1) )]
        uniform token[] joints = ["root", "root/join1", "root/joint2"]
        uniform matrix4d[] restTransforms = [( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 0, 0, 1) ), ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, 1.0231736898422241, 0, 1) ), ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (0, -0.9544228911399841, 0, 1) )]
    }

    def SkelAnimation "animation"
    {
        uniform token[] joints = ["root", "root/join1", "root/joint2"]
        quatf[] rotations.timeSamples = {
            1: [(1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0)],
            2: [(1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0)],
            3: [(1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0)],
            4: [(1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0)],
            5: [(1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0)],
            6: [(1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0)],
            7: [(1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0)],
            8: [(1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0)],
            9: [(1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0)],
            10: [(1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0)],
            11: [(1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0)],
            12: [(1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0)],
            13: [(1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0)],
            14: [(1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0)],
            15: [(1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0)],
            16: [(1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0)],
            17: [(1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0)],
            18: [(1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0)],
            19: [(1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0)],
            20: [(1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0)],
            21: [(1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0)],
            22: [(1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0)],
            23: [(1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0)],
            24: [(1, 0, 0, 0), (1, 0, 0, 0), (1, 0, 0, 0)],
        }
        half3[] scales.timeSamples = {
            1: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
            2: [(1, 1, 1), (0.992676, 1, 0.992676), (0.953125, 1, 0.953125)],
            3: [(1, 1, 1), (0.941895, 1, 0.941895), (0.865723, 1, 0.865723)],
            4: [(1, 1, 1), (0.803223, 1, 0.803223), (0.818848, 1, 0.818848)],
            5: [(1, 1, 1), (0.169434, 1, 0.169434), (0.845703, 1, 0.845703)],
            6: [(1, 1, 1), (0.0844116, 1, 0.0844116), (0.967773, 1, 0.967773)],
            7: [(1, 1, 1), (0.072998, 1, 0.072998), (0.68457, 1, 0.68457)],
            8: [(1, 1, 1), (0.014122, 1, 0.014122), (1.05176, 1, 1.05176)],
            9: [(1, 1, 1), (1.18066, 1, 1.18066), (2.49414, 1, 2.49414)],
            10: [(1, 1, 1), (0.635742, 1, 0.635742), (1.12012, 1, 1.12012)],
            11: [(1, 1, 1), (0.0630493, 1, 0.0630493), (1.02344, 1, 1.02344)],
            12: [(1, 1, 1), (0.287598, 1, 0.287598), (1.00977, 1, 1.00977)],
            13: [(1, 1, 1), (0.781738, 1, 0.781738), (1.00293, 1, 1.00293)],
            14: [(1, 1, 1), (1.27637, 1, 1.27637), (1, 1, 1)],
            15: [(1, 1, 1), (1.50098, 1, 1.50098), (1, 1, 1)],
            16: [(1, 1, 1), (1.39453, 1, 1.39453), (1, 1, 1)],
            17: [(1, 1, 1), (1.16113, 1, 1.16113), (1, 1, 1)],
            18: [(1, 1, 1), (0.928223, 1, 0.928223), (1, 1, 1)],
            19: [(1, 1, 1), (0.822266, 1, 0.822266), (1, 1, 1)],
            20: [(1, 1, 1), (0.84082, 1, 0.84082), (1, 1, 1)],
            21: [(1, 1, 1), (0.884766, 1, 0.884766), (1, 1, 1)],
            22: [(1, 1, 1), (0.9375, 1, 0.9375), (1, 1, 1)],
            23: [(1, 1, 1), (0.981445, 1, 0.981445), (1, 1, 1)],
            24: [(1, 1, 1), (1, 1, 1), (1, 1, 1)],
        }
        float3[] translations.timeSamples = {
            1: [(0, 7.987, 0), (0, 1.0231737, 0), (0, -0.9544229, 0)],
            2: [(0, 7.884441, 0), (0, 1.2645316, 0), (0, -0.96623915, 0)],
            3: [(0, 7.536293, 0), (0, 1.8358042, 0), (0, -0.98818374, 0)],
            4: [(0, 6.881852, 0), (0, 2.5077906, 0), (0, -1, 0)],
            5: [(0, 5.5482335, 0), (0, 3.6069436, 0), (0, -0.9143012, 0)],
            6: [(0, 3.8478897, 0), (0, 4.424425, 0), (0, -1, 0)],
            7: [(0, 2.1980343, 0), (0, 4.0256877, 0), (0, -1, 0)],
            8: [(0, 0.9395472, 0), (0, 4.188043, 0), (0, -1, 0)],
            9: [(0, 0.9395472, 0), (0, -0.26373994, 0), (0, -1, 0)],
            10: [(0, 0.9395472, 0), (0, 1.695752, 0), (0, -1, 0)],
            11: [(0, 2.116855, 0), (0, 3.0938458, 0), (0, -1, 0)],
            12: [(0, 3.4363647, 0), (0, 2.7743738, 0), (0, -1, 0)],
            13: [(0, 4.597689, 0), (0, 2.0715356, 0), (0, -1, 0)],
            14: [(0, 5.575705, 0), (0, 1.3686974, 0), (0, -1, 0)],
            15: [(0, 6.3150945, 0), (0, 1.0492256, 0), (0, -1, 0)],
            16: [(0, 6.8236537, 0), (0, 1.0853274, 0), (0, -1, 0)],
            17: [(0, 7.1834054, 0), (0, 1.1647512, 0), (0, -1, 0)],
            18: [(0, 7.43269, 0), (0, 1.2441751, 0), (0, -1, 0)],
            19: [(0, 7.6263967, 0), (0, 1.2802768, 0), (0, -1, 0)],
            20: [(0, 7.7827907, 0), (0, 1.2582484, 0), (0, -1, 0)],
            21: [(0, 7.8870816, 0), (0, 1.2057197, 0), (0, -1, 0)],
            22: [(0, 7.949236, 0), (0, 1.1430238, 0), (0, -1, 0)],
            23: [(0, 7.97922, 0), (0, 1.0904951, 0), (0, -1, 0)],
            24: [(0, 7.987, 0), (0, 1.0684668, 0), (0, -1, 0)],
        }
    }
}

